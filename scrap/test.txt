"use client";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import React, { useEffect, useState } from "react";


interface QuestionOptoins {
    letter: string,
    value: string
}

interface Question {
    id: number,
    prompt: string,
    options: QuestionOptoins[],
    answer: string
}

interface UrlParameter {
    id: number;
}

interface R{
    questions: string
}

export default function Test({ params }: { params: UrlParameter }) {

    const [all_new_questions, set_all_new_questions] = useState<Question[]>();

    const get_id = async () => {
        const result = await params;
        const test_id = result.id;
        return test_id
    }

    function get_test(test_id: number){
        fetch(`http://127.0.0.1:8000/practicetest/dopracticetest/${test_id}`)
        .then((res)=>{
            if (!res.ok){
                throw new Error("bad response");
            }
            res.json()
            .then((data: R)=>{
                set_all_new_questions(JSON.parse(data.questions))
            })
        })

    }


    useEffect(()=>{

        get_id()
        .then((test_id)=>{
            if (!test_id){
                console.log("Test ID is not defined!")
            }
            else{
                get_test(test_id)
            }
        })


    }, [])    

    let idd: number = 0;

    return (
        <div className="flex flex-col justify-center items-center">
            {all_new_questions && <div>

                {all_new_questions.map((question) => (
                    <div className="testprep-question w-2/3 lg:w-1/2 h-auto mb-16" key={++idd}>
                        <p className="text-xl lg:text-2xl text-slate-800">{`${question.prompt}`}</p>
                        <RadioGroup className="mt-7">
                            {question.options.map((option) => (
                                <div key={option.letter} className="flex items-center p-1">
                                    <RadioGroupItem value={option.letter}
                                        className="mr-3 h-6 w-6" />
                                    <Label className="text-xl text-slate-800">{option.value}</Label>
                                </div>

                            ))}

                        </RadioGroup>
                    </div>


                ))}
            </div>}

            <div className="fixed bottom-0 w-full h-20 flex bg-white 
justify-center items-center border-t-2 border-t-slate-100">
                {/* <Button className="signature-color bg-white border-2 border-slate-200 w-32 text-lg font-bold" onClick={() => gradeTest()}>Submit */}
                    {/* Test</Button> */}
            </div>



        </div>
    )
}
